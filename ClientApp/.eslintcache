[{"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/index.js":"1","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/App.js":"2","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/reportWebVitals.js":"3","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/contexts/ConfigContext.js":"4","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/actions.js":"5","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/config/constant.js":"6","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/index.js":"7","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/routes.js":"8","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/reducers.js":"9","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Auth/AuthGuard.js":"10","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Auth/GuestGuard.js":"11","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Loader.js":"12","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/index.js":"13","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/dashboard/DashDefault/index.js":"14","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useWindowSize.js":"15","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Progress.js":"16","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useOutsideClick.js":"17","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Breadcrumb/index.js":"18","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Spinner.js":"19","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Container.js":"20","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Bar.js":"21","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/menu-items.js":"22","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/NavBar/index.js":"23","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/index.js":"24","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useScriptRef.js":"25","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/index.js":"26","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/NavBar/NavRight/index.js":"27","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavLogo/index.js":"28","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavGroup/index.js":"29","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavCollapse/index.js":"30","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js":"31","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavBadge/index.js":"32","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavIcon/index.js":"33","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/User/Users.jsx":"34","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/User/NewUserModel.jsx":"35","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/usersApi.js":"36","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/api.js":"37","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/config/settings.js":"38","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/index.js":"39","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/TextField.js":"40","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/SelectField.js":"41","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/MultiSelectField.js":"42","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/UploadFileField.js":"43","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/DateField.js":"44","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/DateField1.js":"45","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/FieldArrayForm.js":"46","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/SubmitBtn.js":"47","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/TextAreaField.js":"48","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Customer/Customers.jsx":"49","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Customer/NewCustomerModal.jsx":"50","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/customersApi.js":"51","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/data/countryData.js":"52","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Company/Companies.jsx":"53","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Company/NewCompanyModel.jsx":"54","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/companiesApi.js":"55","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Branch/Branches.jsx":"56","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Branch/NewBranchModel.jsx":"57","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/branchesApi.js":"58","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/Quotation.jsx":"59","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/QuotationDetailModel.jsx":"60","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/ViewQuotationalDetailMODEL.jsx":"61","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/quotationsApi.js":"62","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/Quotations.jsx":"63","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/authApi.js":"64","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/auth/signIn/SignIn.js":"65","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/QuotationsReport.jsx":"66"},{"size":557,"mtime":1661956189796,"results":"67","hashOfConfig":"68"},{"size":368,"mtime":1661956552776,"results":"69","hashOfConfig":"68"},{"size":375,"mtime":1613639706000,"results":"70","hashOfConfig":"68"},{"size":8793,"mtime":1613639706000,"results":"71","hashOfConfig":"68"},{"size":1406,"mtime":1613639706000,"results":"72","hashOfConfig":"68"},{"size":2347,"mtime":1661945911153,"results":"73","hashOfConfig":"68"},{"size":410,"mtime":1613639706000,"results":"74","hashOfConfig":"68"},{"size":2767,"mtime":1662336044897,"results":"75","hashOfConfig":"68"},{"size":200,"mtime":1613639706000,"results":"76","hashOfConfig":"68"},{"size":338,"mtime":1662333887673,"results":"77","hashOfConfig":"68"},{"size":386,"mtime":1662333856281,"results":"78","hashOfConfig":"68"},{"size":231,"mtime":1613639706000,"results":"79","hashOfConfig":"68"},{"size":2986,"mtime":1662325604697,"results":"80","hashOfConfig":"68"},{"size":4572,"mtime":1662337060301,"results":"81","hashOfConfig":"68"},{"size":634,"mtime":1613639706000,"results":"82","hashOfConfig":"68"},{"size":532,"mtime":1613639706000,"results":"83","hashOfConfig":"68"},{"size":455,"mtime":1613639706000,"results":"84","hashOfConfig":"68"},{"size":3133,"mtime":1613639706000,"results":"85","hashOfConfig":"68"},{"size":755,"mtime":1613639706000,"results":"86","hashOfConfig":"68"},{"size":367,"mtime":1613639706000,"results":"87","hashOfConfig":"68"},{"size":983,"mtime":1613639706000,"results":"88","hashOfConfig":"68"},{"size":4600,"mtime":1662337197490,"results":"89","hashOfConfig":"68"},{"size":2451,"mtime":1661955290654,"results":"90","hashOfConfig":"68"},{"size":4300,"mtime":1661955635897,"results":"91","hashOfConfig":"68"},{"size":238,"mtime":1613639706000,"results":"92","hashOfConfig":"68"},{"size":4069,"mtime":1613639706000,"results":"93","hashOfConfig":"68"},{"size":2637,"mtime":1662334989219,"results":"94","hashOfConfig":"68"},{"size":1106,"mtime":1661946170717,"results":"95","hashOfConfig":"68"},{"size":1027,"mtime":1613639706000,"results":"96","hashOfConfig":"68"},{"size":3856,"mtime":1613639706000,"results":"97","hashOfConfig":"68"},{"size":2225,"mtime":1613639706000,"results":"98","hashOfConfig":"68"},{"size":479,"mtime":1613639706000,"results":"99","hashOfConfig":"68"},{"size":341,"mtime":1613639706000,"results":"100","hashOfConfig":"68"},{"size":3618,"mtime":1662024385613,"results":"101","hashOfConfig":"68"},{"size":1411,"mtime":1662012185308,"results":"102","hashOfConfig":"68"},{"size":248,"mtime":1653562859806,"results":"103","hashOfConfig":"68"},{"size":342,"mtime":1662331400761,"results":"104","hashOfConfig":"68"},{"size":73,"mtime":1661962982504,"results":"105","hashOfConfig":"68"},{"size":518,"mtime":1654177526513,"results":"106","hashOfConfig":"68"},{"size":779,"mtime":1653562859918,"results":"107","hashOfConfig":"68"},{"size":1112,"mtime":1662191173811,"results":"108","hashOfConfig":"68"},{"size":1103,"mtime":1653744129217,"results":"109","hashOfConfig":"68"},{"size":1291,"mtime":1653562859918,"results":"110","hashOfConfig":"68"},{"size":966,"mtime":1662298304391,"results":"111","hashOfConfig":"68"},{"size":841,"mtime":1662285039966,"results":"112","hashOfConfig":"68"},{"size":4684,"mtime":1653562859918,"results":"113","hashOfConfig":"68"},{"size":356,"mtime":1662127403488,"results":"114","hashOfConfig":"68"},{"size":790,"mtime":1653562859918,"results":"115","hashOfConfig":"68"},{"size":4368,"mtime":1662013319130,"results":"116","hashOfConfig":"68"},{"size":2554,"mtime":1662189831454,"results":"117","hashOfConfig":"68"},{"size":331,"mtime":1653562859806,"results":"118","hashOfConfig":"68"},{"size":9911,"mtime":1662013067998,"results":"119","hashOfConfig":"68"},{"size":4314,"mtime":1662023894553,"results":"120","hashOfConfig":"68"},{"size":2178,"mtime":1662020377746,"results":"121","hashOfConfig":"68"},{"size":327,"mtime":1662018191665,"results":"122","hashOfConfig":"68"},{"size":3903,"mtime":1662023743743,"results":"123","hashOfConfig":"68"},{"size":1404,"mtime":1662022239368,"results":"124","hashOfConfig":"68"},{"size":259,"mtime":1662021293107,"results":"125","hashOfConfig":"68"},{"size":21192,"mtime":1662299854900,"results":"126","hashOfConfig":"68"},{"size":11804,"mtime":1662296251183,"results":"127","hashOfConfig":"68"},{"size":5507,"mtime":1662283968538,"results":"128","hashOfConfig":"68"},{"size":473,"mtime":1662336622502,"results":"129","hashOfConfig":"68"},{"size":2721,"mtime":1662336853117,"results":"130","hashOfConfig":"68"},{"size":131,"mtime":1654002407554,"results":"131","hashOfConfig":"68"},{"size":4491,"mtime":1662337374446,"results":"132","hashOfConfig":"68"},{"size":1853,"mtime":1662336502210,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1ec1cdk",{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/index.js",[],["277","278"],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/App.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/reportWebVitals.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/contexts/ConfigContext.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/actions.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/config/constant.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/routes.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/store/reducers.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Auth/AuthGuard.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Auth/GuestGuard.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Loader.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/dashboard/DashDefault/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useWindowSize.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Progress.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useOutsideClick.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Breadcrumb/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Spinner.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Container.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Loader/Bar.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/menu-items.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/NavBar/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/hooks/useScriptRef.js",[],["279","280"],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/NavBar/NavRight/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavLogo/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavGroup/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavCollapse/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavBadge/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavIcon/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/User/Users.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/User/NewUserModel.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/usersApi.js",["281"],"import api from \"./api\";\n\nconst endPoint = \"/users\";\n\nconst add = (user) => api.post(endPoint, user);\nconst update = (id, user) => api.put(endPoint + \"/\" + id, user);\nconst getAll = () => api.get(endPoint);\n\nexport default { add, update, getAll };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/api.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/config/settings.js",["282"],"const apiUrl = \"https://localhost:7292/api\";\n\nexport default { apiUrl };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/index.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/TextField.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/SelectField.js",["283"],"import React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport Select from \"react-select\";\nimport FontAwesome from \"react-fontawesome\";\n\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\n\nconst SelectField = ({\n  name,\n  options,\n  label,\n  required,\n  show,\n  onShow,\n  ...otherProps\n}) => {\n  const { setFieldTouched, touched, errors, values, setFieldValue } =\n    useFormikContext();\n\n  return (\n    <FormGroup>\n      <FormLabel>\n        {label} {required && <span className=\"text-danger\">*</span>}\n      </FormLabel>\n      <Select\n        value={options.filter((f) => f.value === values[name])}\n        options={options}\n        onChange={(e) => setFieldValue(name, e.value)}\n        onBlur={() => setFieldTouched(name)}\n        {...otherProps}\n      />\n      {show && (\n        <a className=\"link mb-5\" onClick={onShow}>\n          <FontAwesome name=\"fas fa-plus-circle\" />\n          New customer\n        </a>\n      )}\n      {errors[name] && touched[name] ? (\n        <div className=\"text-danger\">{errors[name]}</div>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default SelectField;\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/MultiSelectField.js",["284"],"import React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport Select from \"react-select\";\nimport FontAwesome from \"react-fontawesome\";\n\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\n\nconst MulitSelectField = ({\n  name,\n  options,\n  label,\n  required,\n  show,\n  onShow,\n  ...otherProps\n}) => {\n  const { setFieldTouched, touched, errors, values, setFieldValue } =\n    useFormikContext();\n\n  return (\n    <FormGroup>\n      <FormLabel>\n        {label} {required && <span className=\"text-danger\">*</span>}\n      </FormLabel>\n      <Select\n        value={values[name]}\n        options={options}\n        onChange={(e) => setFieldValue(name, e || [])}\n        onBlur={() => setFieldTouched(name)}\n        {...otherProps}\n        isMulti\n      />\n      {show && (\n        <a className=\"link mb-5\" onClick={onShow}>\n          <FontAwesome name=\"fas fa-plus-circle\" />\n          New customer\n        </a>\n      )}\n      {errors[name] && touched[name] ? (\n        <div className=\"text-danger\">{errors[name]}</div>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default MulitSelectField;\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/UploadFileField.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/DateField.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/DateField1.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/FieldArrayForm.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/SubmitBtn.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/components/Form/TextAreaField.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Customer/Customers.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Customer/NewCustomerModal.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/customersApi.js",["285"],"import api from \"./api\";\n\nconst endPoint = \"/customers\";\n\nconst add = (customer) => api.post(endPoint, customer);\nconst update = (id, customer) => api.put(endPoint + \"/\" + id, customer);\nconst getAll = () => api.get(endPoint);\nconst getById = (id) => api.get(endPoint + \"/\" + id);\n\nexport default { add, update, getAll, getById };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/data/countryData.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Company/Companies.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Company/NewCompanyModel.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/companiesApi.js",["286"],"import api from \"./api\";\n\nconst endPoint = \"/companies\";\n\nconst add = (company) => api.post(endPoint, company);\nconst update = (id, company) => api.put(endPoint + \"/\" + id, company);\nconst getAll = () => api.get(endPoint);\nconst getById = (id) => api.get(endPoint + \"/\" + id);\n\nexport default { add, update, getAll, getById };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Branch/Branches.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Branch/NewBranchModel.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/branchesApi.js",["287"],"import api from \"./api\";\n\nconst endPoint = \"/branches\";\n\nconst add = (branch) => api.post(endPoint, branch);\nconst update = (id, branch) => api.put(endPoint + \"/\" + id, branch);\nconst getAll = () => api.get(endPoint);\n\nexport default { add, update, getAll };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/Quotation.jsx",["288"],"import { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport FontAwesome from \"react-fontawesome\";\nimport { toast } from \"react-toastify\";\nimport * as Yup from \"yup\";\n\nimport {\n  Col,\n  Row,\n  Card,\n  Table,\n  Button,\n  FormLabel,\n  FormGroup,\n} from \"react-bootstrap\";\nimport {\n  SubmitBtn,\n  DateField,\n  TextField,\n  SelectField,\n} from \"../../components/Form\";\n\nimport QuotationDetailModel from \"./QuotationDetailModel\";\nimport ViewQuotationalDetailMODEL from \"./ViewQuotationalDetailMODEL\";\n\nimport companyApi from \"../../api/companiesApi\";\nimport branchesApi from \"../../api/branchesApi\";\nimport customersApi from \"../../api/customersApi\";\nimport quotationsApi from \"../../api/quotationsApi\";\n\nconst categories = [\n  { label: \"Domestic\", value: \"Domestic\" },\n  { label: \"International\", value: \"International\" },\n];\nconst componentsData = [\n  { id: 0, serviceName: \"Accessories\", status: false, amount: \"\" },\n  { id: 0, serviceName: \"Presel fuel\", status: false, amount: \"\" },\n  { id: 0, serviceName: \"Collection\", status: false, amount: \"\" },\n  { id: 0, serviceName: \"Delivery\", status: false, amount: \"\" },\n  { id: 0, serviceName: \"SCDW\", status: false, amount: \"\" },\n  { id: 0, serviceName: \"WS\", status: false, amount: \"\" },\n];\nconst accessoriesData = [\n  { id: 0, serviceName: \"Baby Seat\", status: false, total: \"\", quantity: \"\" },\n  { id: 0, serviceName: \"Wifi\", status: false, total: \"\", quantity: \"\" },\n  { id: 0, serviceName: \"ADI\", status: false, total: \"\", quantity: \"\" },\n];\n\nconst schema = Yup.object({\n  id: Yup.number(),\n  category: Yup.string().label(\"Category\"),\n  companyId: Yup.number().required().label(\"Company\"),\n  branchId: Yup.number().required().label(\"Branch\"),\n  debitorId: Yup.number().required().label(\"Debitor\"),\n  expiryDate: Yup.date().required().label(\"Expiry date\"),\n  rentStartDate: Yup.date().required().label(\"Rental start date\"),\n  rentEndDate: Yup.date()\n    .when(\n      \"rentStartDate\",\n      (rentStartDate, yup) =>\n        rentStartDate &&\n        yup.min(rentStartDate, \"Rent end date cannot be before rent start date\")\n    )\n    .required()\n    .label(\"Rental end date\"),\n  rentSum: Yup.number().required().label(\"Rental sum\"),\n  details: Yup.array().label(\"Details\"),\n  date: Yup.date(),\n});\nconst quotationDetailSchema = Yup.object({\n  id: Yup.number(),\n  make: Yup.string().required().label(\"Make\"),\n  model: Yup.string().required().label(\"Model\"),\n  group: Yup.string().required().label(\"Group\"),\n  remark: Yup.string().label(\"Remark\"),\n  Services: Yup.array().label(\"Services\"),\n  checkInLocation: Yup.string().required().label(\"Check In Location\"),\n  checkOutLocation: Yup.string().required().label(\"Check Out Location\"),\n  numberOfVehicles: Yup.number().required().label(\"Number Of Vehicles\"),\n});\n\nexport default function Quotation() {\n  const [quotation, setQuotation] = useState({\n    id: 0,\n    category: \"\",\n    companyId: \"\",\n    branchId: \"\",\n    debitorId: \"\",\n    expiryDate: \"\",\n    rentStartDate: \"\",\n    rentEndDate: \"\",\n    rentSum: \"\",\n    details: [],\n    date: new Date(),\n  });\n  const [quotationDetail, setQuotationDetail] = useState({\n    id: 0,\n    make: \"\",\n    model: \"\",\n    group: \"\",\n    remark: \"\",\n    services: [],\n    checkInLocation: \"\",\n    checkOutLocation: \"\",\n    numberOfVehicles: \"\",\n  });\n  const [show, setShow] = useState(false);\n  const [showView, setShowView] = useState(false);\n  const [branches, setBranches] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [components, setComponents] = useState([\n    { id: 0, serviceName: \"Accessories\", status: false, amount: \"\" },\n    { id: 0, serviceName: \"Presel fuel\", status: false, amount: \"\" },\n    { id: 0, serviceName: \"Collection\", status: false, amount: \"\" },\n    { id: 0, serviceName: \"Delivery\", status: false, amount: \"\" },\n    { id: 0, serviceName: \"SCDW\", status: false, amount: \"\" },\n    { id: 0, serviceName: \"WS\", status: false, amount: \"\" },\n  ]);\n  const [accessories, setAccessories] = useState([\n    {\n      id: 0,\n      serviceName: \"Baby Seat\",\n      status: false,\n      total: \"\",\n      quantity: \"\",\n    },\n    { id: 0, serviceName: \"Wifi\", status: false, total: \"\", quantity: \"\" },\n    { id: 0, serviceName: \"ADI\", status: false, total: \"\", quantity: \"\" },\n  ]);\n  const [updatedDetail, setUpdatedDetail] = useState({});\n\n  const handleLoad = async () => {\n    const response = await companyApi.getAll();\n    const response1 = await branchesApi.getAll();\n    const response2 = await customersApi.getAll();\n\n    if (response.ok) setCompanies(response.data);\n    if (response1.ok) setBranches(response1.data);\n    if (response2.ok) setCustomers(response2.data);\n  };\n  const handleUpdateService = (service) => {\n    const data = { ...quotationDetail };\n\n    if (data.services.find((s) => s.serviceName === service.serviceName)) {\n      data.services.map((s) => {\n        if (s.serviceName === service.serviceName) {\n          s.amount = service.amount;\n          s.total = service.total ? parseInt(service.total) : \"\";\n          s.quantity = service.quantity ? parseInt(service.quantity) : \"\";\n\n          return s;\n        }\n        return s;\n      });\n    }\n\n    setQuotationDetail({ ...data });\n  };\n  const handleAddService = (service) => {\n    const data = { ...quotationDetail };\n\n    if (service.status) {\n      if (data.services.find((s) => s.serviceName === service.serviceName)) {\n        data.services.map((s) => {\n          if (s.serviceName === service.serviceName) {\n            s.amount = service.amount;\n            s.total = s.total ? parseInt(s.total) : \"\";\n            s.quantity = s.quantity ? parseInt(s.quantity) : \"\";\n\n            return s;\n          }\n          return s;\n        });\n\n        setQuotationDetail({ ...data });\n      } else {\n        data.services.push(service);\n      }\n    } else {\n      data.services = data.services.filter(\n        (s) => s.serviceName !== service.serviceName\n      );\n      setQuotationDetail({ ...data });\n    }\n  };\n  const handleAddCostComponent = (values) => {\n    setQuotation({\n      ...quotation,\n      details: [...quotation.details, values],\n    });\n    setShow(false);\n  };\n  const handleShowDetail = (setFieldTouched, values) => {\n    setQuotationDetail({\n      id: \"\",\n      make: \"\",\n      model: \"\",\n      group: \"\",\n      remark: \"\",\n      services: [],\n      checkInLocation: \"\",\n      checkOutLocation: \"\",\n      numberOfVehicles: \"\",\n    });\n    setAccessories([\n      {\n        id: 0,\n        serviceName: \"Baby Seat\",\n        status: false,\n        total: \"\",\n        quantity: \"\",\n      },\n      { id: 0, serviceName: \"Wifi\", status: false, total: \"\", quantity: \"\" },\n      { id: 0, serviceName: \"ADI\", status: false, total: \"\", quantity: \"\" },\n    ]);\n    setComponents([\n      { id: 0, serviceName: \"Accessories\", status: false, amount: \"\" },\n      { id: 0, serviceName: \"Presel fuel\", status: false, amount: \"\" },\n      { id: 0, serviceName: \"Collection\", status: false, amount: \"\" },\n      { id: 0, serviceName: \"Delivery\", status: false, amount: \"\" },\n      { id: 0, serviceName: \"SCDW\", status: false, amount: \"\" },\n      { id: 0, serviceName: \"WS\", status: false, amount: \"\" },\n    ]);\n\n    if (\n      values[\"expiryDate\"] &&\n      values[\"rentStartDate\"] &&\n      values[\"rentEndDate\"]\n    ) {\n      return setShow(true);\n    } else {\n      setFieldTouched(\"expiryDate\");\n      setFieldTouched(\"rentStartDate\");\n      setFieldTouched(\"rentEndDate\");\n    }\n  };\n  const handleUpdateDetail = (detail) => {\n    const services = [...detail.services?.map((s) => s.serviceName)];\n    const accessData = [\n      ...accessoriesData.map((a) => {\n        a.status = false;\n        a.quantity = \"\";\n        a.total = \"\";\n\n        return a;\n      }),\n    ];\n    const compoData = [\n      ...componentsData.map((c) => {\n        c.status = false;\n        c.amount = \"\";\n\n        return c;\n      }),\n    ];\n\n    setAccessories([\n      ...accessData.map((a) => {\n        if (services.includes(a.serviceName)) {\n          a.status = true;\n          a.total = detail?.services?.find(\n            (s) => s.serviceName === a.serviceName\n          ).total;\n          a.quantity = detail?.services?.find(\n            (s) => s.serviceName === a.serviceName\n          ).quantity;\n        }\n        return a;\n      }),\n    ]);\n    setComponents([\n      ...compoData.map((c) => {\n        if (services.includes(c.serviceName)) {\n          c.amount = detail?.services?.find(\n            (s) => s.serviceName === c.serviceName\n          ).amount;\n          c.status = true;\n        }\n        return c;\n      }),\n    ]);\n    setUpdatedDetail(detail);\n    handleDeleteDetail(detail);\n    setQuotationDetail(detail);\n    setShow(true);\n  };\n  const handleViewDetail = (detail) => {\n    setQuotationDetail(detail);\n    setShowView(true);\n  };\n  const handleDeleteDetail = (detail) => {\n    const data = [...quotation.details];\n    const index = data.indexOf(detail);\n    data.splice(index, 1);\n\n    setQuotation({ ...quotation, details: data });\n  };\n  const handleDateDifference = (input1, input2) => {\n    let date1 = new Date(input1);\n    let date2 = new Date(input2);\n\n    if (!input1 || !input2) return \"\";\n\n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n\n    // To calculate the no. of days between two dates\n    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n\n    return Difference_In_Days + 1 + \" Days\";\n  };\n  const handleAdditionalCost = (details) => {\n    try {\n      if (details.length > 0) {\n        const sum = [\n          ...details?.map((d) =>\n            d.services\n              .map((s) => {\n                if (s.total) {\n                  s.amount = s.total * s.quantity;\n\n                  return s;\n                }\n\n                s.amount = parseInt(s.amount);\n                return s;\n              })\n              .map((s) => s.amount)\n              ?.reduce((a, b) => a + b)\n          ),\n        ]?.reduce((a, b) => a + b);\n\n        return sum;\n      }\n    } catch (error) {}\n  };\n  const handleTotalVehicles = (details) => {\n    try {\n      return details.map((d) => d.numberOfVehicles)?.reduce((a, b) => a + b);\n    } catch (error) {}\n  };\n  const handleTotalCost = (details, rentPerVehicle) => {\n    try {\n      const totalAdditionalCosts = handleAdditionalCost(details);\n      const numberOfVehicles = handleTotalVehicles(details);\n\n      if (totalAdditionalCosts && numberOfVehicles && rentPerVehicle) {\n        return numberOfVehicles * rentPerVehicle + totalAdditionalCosts;\n      }\n\n      return \"\";\n    } catch (error) {}\n  };\n  const handleCloseDetail = () => {\n    if (\n      updatedDetail.make &&\n      updatedDetail.model &&\n      updatedDetail.numberOfVehicles &&\n      updatedDetail.group\n    ) {\n      handleAddCostComponent(updatedDetail);\n      setUpdatedDetail({});\n    }\n    setShow(false);\n  };\n  const handleSubmit = async (values, { resetForm }) => {\n    const data = { ...values, details: quotation.details };\n    data.rentSum = parseInt(data.rentSum);\n    data.details.map((d) => {\n      d.services.map((s) => {\n        if (s.total) {\n          s.amount = 0;\n\n          return s;\n        }\n\n        s.total = 0;\n        s.quantity = 0;\n      });\n\n      d.id = 0;\n\n      return d;\n    });\n\n    const response = await quotationsApi.add(data);\n\n    if (response.ok) {\n      resetForm();\n      setQuotation({\n        id: 0,\n        category: \"\",\n        companyId: \"\",\n        branchId: \"\",\n        debitorId: \"\",\n        expiryDate: \"\",\n        rentStartDate: \"\",\n        rentEndDate: \"\",\n        rentSum: \"\",\n        details: [],\n        date: new Date(),\n      });\n      setQuotationDetail({\n        id: 0,\n        make: \"\",\n        model: \"\",\n        group: \"\",\n        remark: \"\",\n        services: [],\n        checkInLocation: \"\",\n        checkOutLocation: \"\",\n        numberOfVehicles: \"\",\n      });\n      return toast.success(\"Successful Created.\");\n    }\n\n    return toast.error(\"Something went wrong.\");\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={quotation}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      {({ values, setFieldTouched }) => (\n        <>\n          <ViewQuotationalDetailMODEL\n            show={showView}\n            values={values}\n            setShow={setShowView}\n            rentalSum={values[\"rentSum\"]}\n            quotationDetail={quotationDetail}\n          />\n          <QuotationDetailModel\n            show={show}\n            setShow={setShow}\n            components={components}\n            accessories={accessories}\n            rentalSum={values[\"rentSum\"]}\n            setComponents={setComponents}\n            setAccessories={setAccessories}\n            quotationDetail={quotationDetail}\n            handleAddService={handleAddService}\n            handleCloseModel={handleCloseDetail}\n            handleUpdateService={handleUpdateService}\n            quotationDetailSchema={quotationDetailSchema}\n            handleAddCostComponent={handleAddCostComponent}\n          />\n          <Card>\n            <Card.Header>\n              <Card.Title>Quotation Form</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Col>\n                  <SelectField\n                    name=\"companyId\"\n                    label=\"Company\"\n                    options={companies.map((c) => ({\n                      label: c.name,\n                      value: c.id,\n                    }))}\n                    required\n                  />\n                </Col>\n                <Col>\n                  <SelectField\n                    name=\"branchId\"\n                    label=\"Branch\"\n                    options={branches.map((c) => ({\n                      label: c.name,\n                      value: c.id,\n                    }))}\n                    required\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <SelectField\n                    name=\"debitorId\"\n                    label=\"Debitor\"\n                    options={customers.map((c) => ({\n                      label: c.name,\n                      value: c.id,\n                    }))}\n                    required\n                  />\n                </Col>\n\n                <Col>\n                  <SelectField\n                    name=\"category\"\n                    label=\"Quotation  Category\"\n                    options={categories}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mt-4\">\n                <Col>\n                  <Card>\n                    <Card.Header>\n                      <Card.Text>Costing Details</Card.Text>\n                    </Card.Header>\n                    <Card.Body>\n                      <DateField label=\"Quotation Date\" name=\"date\" />\n                      <DateField\n                        label=\"Expiry Date\"\n                        name=\"expiryDate\"\n                        required\n                      />\n                      <DateField\n                        label=\"Rental Start Date\"\n                        name=\"rentStartDate\"\n                        required\n                      />\n                      <DateField\n                        label=\"Rental End Date\"\n                        name=\"rentEndDate\"\n                        required\n                      />\n                      <FormLabel>Rental Duration</FormLabel>\n                      <input\n                        className=\"form-control\"\n                        value={handleDateDifference(\n                          values[\"rentStartDate\"],\n                          values[\"rentEndDate\"]\n                        )}\n                        disabled\n                      />\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col>\n                  <Card>\n                    <Card.Header>\n                      <Card.Text>Rental Sum</Card.Text>\n                    </Card.Header>\n                    <Card.Body>\n                      <TextField\n                        label=\"Total Rental Sum\"\n                        name=\"rentSum\"\n                        type=\"number\"\n                        required\n                      />\n                      <FormGroup>\n                        <FormLabel>Total Additional Cost</FormLabel>\n                        <input\n                          className=\"form-control\"\n                          value={handleAdditionalCost(quotation.details)}\n                          disabled\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Total Amount</FormLabel>\n                        <input\n                          className=\"form-control\"\n                          value={handleTotalCost(\n                            quotation.details,\n                            values[\"rentSum\"]\n                          )}\n                          disabled\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Total Number Of Vehicles</FormLabel>\n                        <input\n                          className=\"form-control\"\n                          value={handleTotalVehicles(quotation.details)}\n                          disabled\n                        />\n                      </FormGroup>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Card>\n                    <Card.Header>\n                      Cost Details\n                      <Card.Text className=\"text-right\">\n                        <Button\n                          onClick={() =>\n                            handleShowDetail(setFieldTouched, values)\n                          }\n                        >\n                          <FontAwesome name=\"fas fa-plus text-white\" /> Add New\n                          Cost Components\n                        </Button>\n                      </Card.Text>\n                    </Card.Header>\n                    {quotation.details?.length > 0 && (\n                      <Table>\n                        <thead>\n                          <tr>\n                            <th>Make</th>\n                            <th>Model</th>\n                            <th>Group</th>\n                            <th>No Of Vehicle</th>\n                            <th>Rental Sum</th>\n                            <th>Total</th>\n                            <th></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {quotation.details?.map((d) => (\n                            <tr key={d.model}>\n                              <td>{d.make}</td>\n                              <td>{d.model}</td>\n                              <td>{d.group}</td>\n                              <td>{d.numberOfVehicles}</td>\n                              <td>{values[\"rentSum\"]}</td>\n                              <td>{values[\"rentSum\"] * d.numberOfVehicles}</td>\n                              <td>\n                                <>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"secondary\"\n                                    onClick={() => handleViewDetail(d)}\n                                  >\n                                    {\" \"}\n                                    <FontAwesome name=\"fas fa-eye text-white\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"success\"\n                                    onClick={() => handleUpdateDetail(d)}\n                                  >\n                                    {\" \"}\n                                    <FontAwesome name=\"fas fa-edit text-white\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"danger\"\n                                    onClick={() => handleDeleteDetail(d)}\n                                  >\n                                    {\" \"}\n                                    <FontAwesome name=\"fas fa-trash-can text-white\" />\n                                  </Button>\n                                </>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    )}\n                  </Card>\n                </Col>\n              </Row>\n            </Card.Body>\n            <Card.Footer className=\"text-center\">\n              <SubmitBtn\n                title=\"Create\"\n                disabled={quotation.details.length === 0}\n              />\n            </Card.Footer>\n          </Card>\n        </>\n      )}\n    </Formik>\n  );\n}\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/QuotationDetailModel.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/ViewQuotationalDetailMODEL.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/quotationsApi.js",["289"],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/Quotations.jsx",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/api/authApi.js",["290"],"import api from \"./api\";\n\nconst endPoint = \"/token\";\n\nconst login = (user) => api.post(endPoint, user);\n\nexport default { login };\n","/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/auth/signIn/SignIn.js",[],"/home/abdisalam/Projects/Web/Quotation/ClientApp/src/views/Quotation/QuotationsReport.jsx",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"291","replacedBy":"295"},{"ruleId":"293","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":9,"column":1,"nodeType":"299","endLine":9,"endColumn":40},{"ruleId":"297","severity":1,"message":"298","line":3,"column":1,"nodeType":"299","endLine":3,"endColumn":27},{"ruleId":"300","severity":1,"message":"301","line":33,"column":9,"nodeType":"302","endLine":33,"endColumn":51},{"ruleId":"300","severity":1,"message":"301","line":34,"column":9,"nodeType":"302","endLine":34,"endColumn":51},{"ruleId":"297","severity":1,"message":"298","line":10,"column":1,"nodeType":"299","endLine":10,"endColumn":49},{"ruleId":"297","severity":1,"message":"298","line":10,"column":1,"nodeType":"299","endLine":10,"endColumn":49},{"ruleId":"297","severity":1,"message":"298","line":9,"column":1,"nodeType":"299","endLine":9,"endColumn":40},{"ruleId":"303","severity":1,"message":"304","line":371,"column":26,"nodeType":"305","messageId":"306","endLine":371,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":12,"column":1,"nodeType":"299","endLine":12,"endColumn":78},{"ruleId":"297","severity":1,"message":"298","line":7,"column":1,"nodeType":"299","endLine":7,"endColumn":26},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],["307"],["308"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]